@using CelOrdApp.Data
@using static Domain.EntityTypes

@{
	ViewData["Title"] = "Admin - Users";
}

<div class="container" id="app">
	<div class="row">
		<div class="col-md-12">
			<table class="table table-striped">
				<thead>
					<tr>
						<th>Nombre</th>
						<th>Area</th>
					</tr>
				</thead>
				<tbody>
					@if (Model == null || Model?.Count == 0)
					{
						<tr>
							<td colspan="2">No hay usuarios</td>
						</tr>
					}
					else if (Model != null)
					{
						@foreach (User user in Model)
						{
							<tr>
								<td>@user.FullName</td>
								<td>@user.UserType.ToSpanish()</td>
							</tr>
						}
					}
				</tbody>
			</table>

			<a href="#" v-on:click="showUserForm=!showUserForm">Nuevo</a>
			<form id="frmUserData">
				<div class="row" id="userData" v-if="showUserForm">
					<div class="col-md-6">
						<div class="row">
							<div class="col-md-6">
								Nombre
							</div>
							<div class="col-md-6">
								<input type="text" size="20" name="name" id="name" required />
							</div>
						</div>
						<div class="row">
							<div class="col-md-6">
								Usuario
							</div>
							<div class="col-md-6">
								<input type="text" size="20" name="username" id="username" required />
							</div>
						</div>
						<div class="row">
							<div class="col-md-6">
								Contrase&ntilde;a
							</div>
							<div class="col-md-6">
								<input type="password" size="20" name="password" id="password" required />
							</div>
						</div>
						<div class="row">
							<div class="col-md-6">
								Area
							</div>
							<div class="col-md-6">
								<select id="userType" name="userType" class="form-control" required>
									<option value="" selected>Seleccione un Area</option>
									@foreach (UserType userType in Enum.GetValues<UserType>())
									{
										if (userType == UserType.Unknown) continue;

										<option value="@((int)userType)">@userType.ToSpanish()</option>
									}
								</select>
							</div>
						</div>
						<div class="row mt-3">
							<div class="col-6">
								<button type="submit" class="btn btn-primary">Guardar</button>
							</div>
							<div class="col-6">
								<button class="btn btn-danger" v-on:click="showUserForm=false">Cancelar</button>
							</div>
						</div>
					</div>
				</div>
			</form>

		</div>
	</div>
</div>

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
	const app = Vue.createApp({
		data() {
			return {
				showUserForm: false
			};
		},
		methods: {
			saveUser() {
				alert("Sending User data");
			}
		}
	});

	app.mount("#app");

	const frm = document.getElementById("frmUserData");
	frm.addEventListener("submit", (evt) => {
		evt.preventDefault();

		if (frm.elements["userType"].value == 0) {
			alert("Debe seleccionar el Area");
			return;
		}

		const frmData = new FormData(frm);
		const data = {
			FullName: frmData.get("name"),
			UserName: frmData.get("username"),
			Password: frmData.get("password"),
			UserType: Number(frmData.get("userType"))
		};

		try {
			const url = "/Admin/Users/SaveUser";
			const result = axios.post(url, data, {
				headers: {
					"Content-Type": "application/json"
				},
				withCredentials: true
			});
			result.then((response) => {
				if (response.status == 200) {
					alert("Usuario creado correctamente");
					frm.reset();
					app.showUserForm = false;
					location.reload();
				} else {
					alert("Error al crear el usuario: " + response.data.message);
				}
			}).catch((error) => {
				alert("Error al crear el usuario: " + error.response.data.error);
			});
		} catch (error) {
			console.error("Error:", error);
		}
	});
</script>
